{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 15,
  "iteration": 1635279945958,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": true,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 75,
      "panels": [
        {
          "datasource": "${datasource}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds",
                "seriesBy": "last"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 30,
                "gradientMode": "scheme",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "light-red",
                    "value": -50000
                  },
                  {
                    "color": "light-green",
                    "value": 0
                  }
                ]
              },
              "unit": "watt"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Production"
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Consumption line"
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "line"
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "power"
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "_value"
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 14,
            "x": 0,
            "y": 1
          },
          "id": 57,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "hidden",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "multi"
            }
          },
          "targets": [
            {
              "query": "production = from(bucket: \"multisma2\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"ac_measurements\" and r._field == \"power\" and r._inverter == \"site\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean)\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value, _device: r._inverter }))\n  |> yield(name: \"production\")\n  \nconsumption = from(bucket: \"cs24\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"power\" and r._device == \"line\" and r._field == \"sample\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean)\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value, _device: r._device}))\n  |> yield(name: \"consumption\")\n\nunion(tables: [production, consumption])\n  |> truncateTimeColumn(unit: 10s)\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_device\"], valueColumn: \"_value\")\n  |> sort(columns: [\"_time\"], desc: false)\n  |> fill(column: \"site\", value: 0.0)\n  |> map(fn: (r) => ({ _time: r._time, \"Net Power\": float(v: r.site) - r.line }))\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false, column: \"Net Power\")\n  |> drop(columns: [\"_start\", \"_stop\"])\n",
              "refId": "Delta"
            }
          ],
          "title": "Net Power",
          "type": "timeseries"
        },
        {
          "datasource": "${datasource}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  }
                ]
              },
              "unit": "watt"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 5,
            "x": 14,
            "y": 1
          },
          "id": 8,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {
              "valueSize": 75
            },
            "textMode": "auto"
          },
          "pluginVersion": "8.2.2",
          "targets": [
            {
              "query": "from(bucket: \"cs24\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"power\" and r._device == \"line\" and r._field == \"sample\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n",
              "refId": "Current"
            }
          ],
          "title": "Current Consumption",
          "type": "stat"
        },
        {
          "datasource": "${datasource}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "max": 20000,
              "min": -20000,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "light-red",
                    "value": -20000
                  },
                  {
                    "color": "light-green",
                    "value": 0
                  }
                ]
              },
              "unit": "watt"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 4,
            "x": 19,
            "y": 1
          },
          "id": 59,
          "options": {
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/^Delta$/",
              "values": false
            },
            "showThresholdLabels": false,
            "showThresholdMarkers": true,
            "text": {}
          },
          "pluginVersion": "8.2.2",
          "targets": [
            {
              "query": "production = from(bucket: \"multisma2\")\n  |> range(start: -30m)\n  |> last()\n  |> filter(fn: (r) => r._measurement == \"ac_measurements\" and r._field == \"power\" and r._inverter == \"site\")\n  |> map(fn: (r) => ({ _value: float(v: r._value) }))\n  |> yield(name: \"production\")\n\nconsumption = from(bucket: \"cs24\")\n  |> range(start: -10m)\n  |> last()\n  |> filter(fn: (r) => r._measurement == \"power\" and r._device == \"line\" and r._field == \"sample\")\n  |> map(fn: (r) => ({ _value: r._value * -1.0 }))\n  |> yield(name: \"consumption\")\n  \nunion(tables: [production, consumption])\n  |> sum(column: \"_value\")\n  |> map(fn: (r) => ({ Delta: r._value }))\n",
              "refId": "Net Power"
            }
          ],
          "title": "Net Power",
          "type": "gauge"
        },
        {
          "datasource": null,
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 0,
            "y": 9
          },
          "id": 65,
          "options": {
            "content": "",
            "mode": "markdown"
          },
          "pluginVersion": "8.2.2",
          "title": "${period} (kWh)",
          "type": "text"
        },
        {
          "datasource": "${datasource}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 2,
            "y": 9
          },
          "id": 16,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/^Value$/",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.2.2",
          "targets": [
            {
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._device == \"line\" and r._field == lookup.${period}.f)\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value * 0.001}))\n",
              "refId": "A"
            }
          ],
          "title": "Total",
          "type": "stat"
        },
        {
          "datasource": "${datasource}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 4,
            "y": 9
          },
          "id": 10,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/^Value$/",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.2.2",
          "targets": [
            {
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._location == \"kitchen\" and r._field == lookup.${period}.f and not (exists r._device))\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value * 0.001}))\n",
              "refId": "A"
            }
          ],
          "title": "Kitchen",
          "type": "stat"
        },
        {
          "datasource": "${datasource}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 6,
            "y": 9
          },
          "id": 12,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/^Value$/",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.2.2",
          "targets": [
            {
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._device == \"heatpump\" and r._field == lookup.${period}.f)\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value * 0.001}))\n",
              "refId": "A"
            }
          ],
          "title": "Heat pump",
          "type": "stat"
        },
        {
          "datasource": "${datasource}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 8,
            "y": 9
          },
          "id": 26,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/^Value$/",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.2.2",
          "targets": [
            {
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._device == \"hot_water\" and r._field == lookup.${period}.f)\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value * 0.001}))\n",
              "refId": "A"
            }
          ],
          "title": "Hot water",
          "type": "stat"
        },
        {
          "datasource": "${datasource}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 10,
            "y": 9
          },
          "id": 14,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/^Value$/",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.2.2",
          "targets": [
            {
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._location == \"vehicles\" and r._field == lookup.${period}.f and not (exists r._device))\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value * 0.001}))\n",
              "refId": "A"
            }
          ],
          "title": "EV Charging",
          "type": "stat"
        },
        {
          "datasource": "${datasource}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 12,
            "y": 9
          },
          "id": 31,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/^Value$/",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.2.2",
          "targets": [
            {
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._location == \"bedroom\" and r._field == lookup.${period}.f and not (exists r._device))\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value * 0.001}))\n",
              "refId": "A"
            }
          ],
          "title": "Bedrooms",
          "type": "stat"
        },
        {
          "datasource": "${datasource}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 14,
            "y": 9
          },
          "id": 34,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/^Value$/",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.2.2",
          "targets": [
            {
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._location == \"basement\" and r._field == lookup.${period}.f and not (exists r._device))\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value * 0.001}))\n",
              "refId": "A"
            }
          ],
          "title": "Basement",
          "type": "stat"
        },
        {
          "datasource": "${datasource}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 16,
            "y": 9
          },
          "id": 37,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/^Value$/",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.2.2",
          "targets": [
            {
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._location == \"laundry\" and r._field == lookup.${period}.f and not (exists r._device))\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value * 0.001}))\n",
              "refId": "A"
            }
          ],
          "title": "Laundry",
          "type": "stat"
        },
        {
          "datasource": "${datasource}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 18,
            "y": 9
          },
          "id": 40,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/^Value$/",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.2.2",
          "targets": [
            {
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._location == \"main_floor\" and r._field == lookup.${period}.f and not (exists r._device))\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value * 0.001}))\n",
              "refId": "A"
            }
          ],
          "title": "Main Floor",
          "type": "stat"
        },
        {
          "datasource": "${datasource}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 20,
            "y": 9
          },
          "id": 71,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/^Value$/",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.2.2",
          "targets": [
            {
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._location == \"garage\" and r._field == lookup.${period}.f and not (exists r._device))\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value * 0.001}))\n",
              "refId": "A"
            }
          ],
          "title": "Garage",
          "type": "stat"
        },
        {
          "datasource": "${datasource}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 22,
            "y": 9
          },
          "id": 69,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/^Value$/",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.2.2",
          "targets": [
            {
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f)\n  |> filter(fn: (r) => r._device == \"metered\" or r._device == \"line\")\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_device\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ _time: r._time, _value: (r.line - r.metered) * 0.001}))\n",
              "refId": "A"
            }
          ],
          "title": "Unmetered",
          "type": "stat"
        }
      ],
      "title": "Overview",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 83,
      "panels": [
        {
          "datasource": "${datasource}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "blue",
                "mode": "fixed"
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 8,
            "x": 0,
            "y": 2
          },
          "id": 68,
          "options": {
            "colorMode": "background",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/^Meter$/",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.2.2",
          "targets": [
            {
              "query": "from(bucket: \"cs24\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == \"today\" and exists r._meter)\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_meter\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ r with _value: (r.delta_wh + r.reading) * 0.001 }))\n  |> map(fn: (r) => ({ Meter: if r._value > 100000.0 then r._value - 100000.0 else r._value }))\n",
              "refId": "A"
            }
          ],
          "title": "Utility Meter Reading",
          "type": "stat"
        },
        {
          "datasource": "${datasource}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "blue",
                "mode": "fixed"
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 8,
            "x": 8,
            "y": 2
          },
          "id": 67,
          "options": {
            "colorMode": "background",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.2.2",
          "targets": [
            {
              "query": "from(bucket: \"cs24\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._meter == \"delta_wh\" and r._field == \"today\")\n  |> map(fn: (r) => ({ r with _value: r._value * 0.001 }))\n",
              "refId": "A"
            }
          ],
          "title": "Utility Meter Daily Change",
          "type": "stat"
        }
      ],
      "title": "Utility Meter",
      "type": "row"
    },
    {
      "collapsed": false,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 2
      },
      "id": 77,
      "panels": [],
      "title": "Trends",
      "type": "row"
    },
    {
      "datasource": "${datasource}",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": -1,
            "drawStyle": "bars",
            "fillOpacity": 100,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "kWh"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Production"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Consumption"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "30 day average"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "line"
              },
              {
                "id": "custom.lineWidth",
                "value": 4
              },
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": -200
                    },
                    {
                      "color": "yellow",
                      "value": 0
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "_movavg"
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 8,
        "x": 0,
        "y": 3
      },
      "hideTimeOverride": true,
      "id": 52,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "hidden",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "pluginVersion": "8.1.5",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"multisma2\")\n  |> range(start: -31d)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter == \"site\" and r._field == \"today\")\n  |> map(fn: (r) => ({ _time: r._time, Production: r._value }))\n",
          "refId": "Production",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "hide": false,
          "query": "from(bucket: \"cs24\")\n  |> range(start: -31d)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._device == \"line\" and r._field == \"today\")\n  |> map(fn: (r) => ({ _time: r._time, Consumption: r._value * -0.001}))\n",
          "refId": "Consumption"
        },
        {
          "hide": false,
          "query": "c1 = from(bucket: \"cs24\")\n  |> range(start: -60d)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._device == \"line\" and r._field == \"today\")\n  |> movingAverage(n: 30)\n  |> map(fn: (r) => ({ _time: r._time, _movavg: r._value * -0.001}))\n  |> yield(name: \"c1\")\n\nm1 = from(bucket: \"multisma2\")\n  |> range(start: -60d)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter == \"site\" and r._field == \"today\")\n  |> movingAverage(n: 30)\n  |> map(fn: (r) => ({ _time: r._time, _movavg: r._value }))\n  |> yield(name: \"m1\")\n\njoin(tables: {d1: c1, d2: m1}, on: [\"_time\"])\n  |> drop(columns: [\"_movavg\"])\n  |> map(fn: (r) => ({ _time: r._time, \"30 day average\": r._movavg_d1 + r._movavg_d2}))\n",
          "refId": "Net Production"
        }
      ],
      "timeFrom": "31d",
      "timeShift": "12h",
      "title": "30 Day Trend",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": "${datasource}",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "red",
            "mode": "fixed"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 1000,
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 100,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "mappings": [],
          "min": 0,
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              }
            ]
          },
          "unit": "kWh"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Current"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Previous"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 8,
        "x": 8,
        "y": 3
      },
      "hideTimeOverride": true,
      "id": 48,
      "maxDataPoints": null,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "hidden",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "pluginVersion": "8.1.5",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"cs24\")\n  |> range(start: -13mo, stop: -1mo)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._device == \"line\" and r._field == \"month\")\n  |> map(fn: (r) => ({ _time: r._time, Previous: r._value * 0.001}))\n",
          "refId": "Previous",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "hide": false,
          "query": "from(bucket: \"cs24\")\n  |> range(start: -1mo)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._device == \"line\" and r._field == \"month\")\n  |> map(fn: (r) => ({ _time: r._time, Current: r._value * 0.001}))\n",
          "refId": "Current"
        }
      ],
      "timeFrom": "13M",
      "timeShift": "10d",
      "title": "12 Month Consumption",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": "${datasource}",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "red",
            "mode": "fixed"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 100,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "kWh"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAverage"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-orange",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 4
              },
              {
                "id": "displayName",
                "value": "Moving Average"
              },
              {
                "id": "custom.lineInterpolation",
                "value": "smooth"
              },
              {
                "id": "custom.drawStyle",
                "value": "line"
              },
              {
                "id": "custom.fillOpacity",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Current"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Previous"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 8,
        "x": 16,
        "y": 3
      },
      "hideTimeOverride": true,
      "id": 46,
      "interval": null,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "hidden",
          "placement": "right"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "pluginVersion": "8.1.5",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"cs24\")\n  |> range(start: -31d, stop: -1d)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._device == \"line\" and r._field == \"today\")\n  |> map(fn: (r) => ({ _time: r._time, Previous: r._value * 0.001}))\n",
          "refId": "Previous",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "hide": false,
          "query": "from(bucket: \"cs24\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._device == \"line\" and r._field == \"today\")\n  |> map(fn: (r) => ({ _time: r._time, Current: r._value * 0.001}))\n",
          "refId": "Current"
        },
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"cs24\")\n  |> range(start: -60d)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._device == \"line\" and r._field == \"today\")\n  |> movingAverage(n: 30)\n  |> map(fn: (r) => ({ _time: r._time, MovingAverage: r._value * 0.001}))\n",
          "refId": "Moving Average",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "timeFrom": "31d",
      "timeShift": "12h",
      "title": "30 Day Consumption",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "collapsed": true,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "id": 79,
      "panels": [
        {
          "datasource": "${datasource}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "red",
                "mode": "fixed"
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 24,
            "x": 0,
            "y": 4
          },
          "id": 70,
          "options": {
            "displayMode": "basic",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showUnfilled": false,
            "text": {}
          },
          "pluginVersion": "8.2.2",
          "targets": [
            {
              "query": "from(bucket: \"cs24\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"power\" and r._location == \"kitchen\" and r._field == \"now\")\n  |> map(fn: (r) => ({ _time: r._time, \"Kitchen\": r._value }))\n",
              "refId": "Kitchen"
            },
            {
              "hide": false,
              "query": "from(bucket: \"cs24\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"power\" and r._location == \"vehicles\" and r._field == \"now\")\n  |> map(fn: (r) => ({ _time: r._time, \"EV Charging\": r._value }))\n",
              "refId": "EV Charging"
            },
            {
              "hide": false,
              "query": "from(bucket: \"cs24\")\n  |> range(start: -1m)\n  |> filter(fn: (r) => r._measurement == \"power\" and r._device == \"heatpump\" and r._field == \"sample\")\n  |> last()\n  |> map(fn: (r) => ({ _time: r._time, \"Heat Pump\": r._value }))\n",
              "refId": "Heat Pump"
            },
            {
              "hide": false,
              "query": "from(bucket: \"cs24\")\n  |> range(start: -1m)\n  |> filter(fn: (r) => r._measurement == \"power\" and r._device == \"hot_water\" and r._field == \"sample\")\n  |> last()\n  |> map(fn: (r) => ({ _time: r._time, \"Hot Water\": r._value }))\n",
              "refId": "Hot Water"
            },
            {
              "hide": false,
              "query": "from(bucket: \"cs24\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"power\" and r._location == \"basement\" and r._field == \"now\")\n  |> map(fn: (r) => ({ _time: r._time, \"Basement\": r._value }))\n",
              "refId": "Basement"
            },
            {
              "hide": false,
              "query": "from(bucket: \"cs24\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"power\" and r._location == \"garage\" and r._field == \"today\")\n  |> map(fn: (r) => ({ _time: r._time, \"Garage\": r._value }))\n",
              "refId": "Garage"
            },
            {
              "hide": false,
              "query": "from(bucket: \"cs24\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"power\" and r._location == \"laundry\" and r._field == \"now\")\n  |> map(fn: (r) => ({ _time: r._time, \"Laundry\": r._value }))\n",
              "refId": "Laundry"
            },
            {
              "hide": false,
              "query": "from(bucket: \"cs24\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"power\" and r._location == \"bedroom\" and r._field == \"now\")\n  |> map(fn: (r) => ({ _time: r._time, \"Bedrooms\": r._value }))\n",
              "refId": "Bedrooms"
            },
            {
              "hide": false,
              "query": "from(bucket: \"cs24\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"power\" and r._location == \"main_floor\" and r._field == \"now\")\n  |> map(fn: (r) => ({ _time: r._time, \"Main Floor\": r._value }))\n",
              "refId": "Main Floor"
            }
          ],
          "title": "Current Power Consumption (W)",
          "type": "bargauge"
        },
        {
          "datasource": "${datasource}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "left",
                "axisSoftMax": 10000,
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "watt"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "sample line"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Line"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "sample l1"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "L1"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "sample l2"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "L2"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 24,
            "x": 0,
            "y": 14
          },
          "id": 2,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "multi"
            }
          },
          "targets": [
            {
              "query": "from(bucket: \"cs24\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"power\" and r._field == \"sample\")\n  |> filter(fn: (r) => r._device == \"line\" or r._device == \"l1\" or r._device == \"l2\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n",
              "refId": "A"
            }
          ],
          "title": "Line Characteristics",
          "type": "timeseries"
        },
        {
          "datasource": "${datasource}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMax": 6000,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "watt"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "heatpump"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Heat Pump"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "hot_water"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Hot Water"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 7,
            "w": 24,
            "x": 0,
            "y": 25
          },
          "id": 5,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "multi"
            }
          },
          "targets": [
            {
              "query": "from(bucket: \"cs24\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"power\" and r._device == \"hot_water\" and r._field == \"sample\")\n  |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_location\", \"_field\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n",
              "refId": "Hot Water"
            },
            {
              "hide": false,
              "query": "from(bucket: \"cs24\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"power\" and r._device == \"heatpump\" and r._field == \"sample\")\n  |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_location\", \"_field\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n",
              "refId": "Heat Pump"
            }
          ],
          "title": "Heat Pump & Hot Water",
          "type": "timeseries"
        },
        {
          "datasource": "${datasource}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMax": 2000,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "watt"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "dishwasher"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Dishwasher"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "microwave"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Microwave"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "range"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Range"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "refrigerator"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Refrigerator "
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "Outlets"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Outlets"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 14,
            "w": 24,
            "x": 0,
            "y": 32
          },
          "id": 6,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "multi"
            }
          },
          "targets": [
            {
              "query": "from(bucket: \"cs24\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"power\" and r._location == \"kitchen\" and r._field == \"sample\")\n  |> filter(fn: (r) => r._device != \"outlets_1\" and r._device != \"outlets_2\")\n  |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_location\", \"_field\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n",
              "refId": "TheRest"
            },
            {
              "hide": false,
              "query": "from(bucket: \"cs24\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"power\" and r._location == \"kitchen\")\n  |> filter(fn: (r) => r._device == \"outlets_1\" or r._device == \"outlets_2\")\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_device\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ r with _value: r.outlets_1 + r.outlets_2 }))\n  |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_location\", \"_field\", \"outlets_1\", \"outlets_2\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n",
              "refId": "Outlets"
            }
          ],
          "title": "Kitchen",
          "type": "timeseries"
        },
        {
          "datasource": "${datasource}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMax": 2000,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "watt"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "dryer"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Dryer"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "washer"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Washer"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 46
          },
          "id": 60,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "multi"
            }
          },
          "targets": [
            {
              "query": "from(bucket: \"cs24\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"power\" and r._location == \"laundry\" and r._field == \"sample\")\n  |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_location\", \"_field\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n",
              "refId": "Laundry"
            }
          ],
          "title": "Laundry",
          "type": "timeseries"
        },
        {
          "datasource": "${datasource}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMax": 10000,
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "watt"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "juicebox"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Juicebox"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "tesla"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Tesla HPWC"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 54
          },
          "id": 4,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "query": "from(bucket: \"cs24\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"power\" and r._location == \"vehicles\" and r._field == \"sample\")\n  |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_location\", \"_field\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n",
              "refId": "EV Charging"
            }
          ],
          "title": "EV Charging",
          "type": "timeseries"
        }
      ],
      "title": "Power",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 14
      },
      "id": 81,
      "panels": [
        {
          "datasource": "${datasource}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "decimals": 0,
              "mappings": [],
              "unit": "percent"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 5
          },
          "id": 55,
          "options": {
            "displayLabels": [],
            "legend": {
              "displayMode": "list",
              "placement": "right",
              "values": [
                "percent"
              ]
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "repeat": "Periods",
          "repeatDirection": "h",
          "targets": [
            {
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f)\n  |> filter(fn: (r) => (r._location == \"kitchen\" and not exists r._device) or r._device == \"line\")\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value, _ratio: if exists r._location then \"numerator\" else \"denominator\" }))\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_ratio\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ _time: r._time, \"Kitchen\":\n      if not exists r.denominator or r.denominator == 0.0 then 0.0\n      else r.numerator / r.denominator * 100.0 } ))\n",
              "refId": "Kitchen"
            },
            {
              "hide": false,
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f)\n  |> filter(fn: (r) => (r._location == \"basement\" and not exists r._device) or r._device == \"line\")\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value, _ratio: if exists r._location then \"numerator\" else \"denominator\" }))\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_ratio\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ _time: r._time, \"Basement\":\n      if not exists r.denominator or r.denominator == 0.0 then 0.0\n      else r.numerator / r.denominator * 100.0 } ))\n",
              "refId": "Basement"
            },
            {
              "hide": false,
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f)\n  |> filter(fn: (r) => (r._location == \"vehicles\" and not exists r._device) or r._device == \"line\")\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value, _ratio: if exists r._location then \"numerator\" else \"denominator\" }))\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_ratio\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ _time: r._time, \"EV Charging\":\n      if not exists r.denominator or r.denominator == 0.0 then 0.0\n      else r.numerator / r.denominator * 100.0 } ))\n",
              "refId": "Vehicles"
            },
            {
              "hide": false,
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f)\n  |> filter(fn: (r) => (r._location == \"basement\" and not exists r._device) or r._device == \"line\")\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value, _ratio: if exists r._location then \"numerator\" else \"denominator\" }))\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_ratio\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ _time: r._time, \"Bedrooms\":\n      if not exists r.denominator or r.denominator == 0.0 then 0.0\n      else r.numerator / r.denominator * 100.0 } ))\n",
              "refId": "Bedrooms"
            },
            {
              "hide": false,
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f)\n  |> filter(fn: (r) => (r._location == \"laundry\" and not exists r._device) or r._device == \"line\")\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value, _ratio: if exists r._location then \"numerator\" else \"denominator\" }))\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_ratio\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ _time: r._time, \"Laundry\":\n      if not exists r.denominator or r.denominator == 0.0 then 0.0\n      else r.numerator / r.denominator * 100.0 } ))\n",
              "refId": "Laundry"
            },
            {
              "hide": false,
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f)\n  |> filter(fn: (r) => (r._location == \"main_floor\" and not exists r._device) or r._device == \"line\")\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value, _ratio: if exists r._location then \"numerator\" else \"denominator\" }))\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_ratio\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ _time: r._time, \"Main Floor\":\n      if not exists r.denominator or r.denominator == 0.0 then 0.0\n      else r.numerator / r.denominator * 100.0 } ))\n\n",
              "refId": "Main Floor"
            },
            {
              "hide": false,
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f)\n  |> filter(fn: (r) => (r._location == \"garage\" and not exists r._device) or r._device == \"line\")\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value, _ratio: if exists r._location then \"numerator\" else \"denominator\" }))\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_ratio\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ _time: r._time, \"Garage\":\n      if not exists r.denominator or r.denominator == 0.0 then 0.0\n      else r.numerator / r.denominator * 100.0 } ))\n",
              "refId": "Garage"
            },
            {
              "hide": false,
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f)\n  |> filter(fn: (r) => r._device == \"hot_water\" or r._device == \"line\")\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value, _ratio: if r._device == \"line\" then \"denominator\" else \"numerator\" }))\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_ratio\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ _time: r._time, \"Hot Water\":\n      if not exists r.denominator or r.denominator == 0.0 then 0.0\n      else r.numerator / r.denominator * 100.0 } ))\n",
              "refId": "Hot water"
            },
            {
              "hide": false,
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f)\n  |> filter(fn: (r) => r._device == \"heatpump\" or r._device == \"line\")\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value, _ratio: if r._device == \"line\" then \"denominator\" else \"numerator\" }))\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_ratio\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ _time: r._time, \"Heat Pump\":\n      if not exists r.denominator or r.denominator == 0.0 then 0.0\n      else r.numerator / r.denominator * 100.0 } ))\n",
              "refId": "Heat pump"
            },
            {
              "hide": false,
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f)\n  |> filter(fn: (r) => r._device == \"metered\" or r._device == \"line\")\n  |> map(fn: (r) => ({ _time: r._time, _value: r._value, _ratio: if r._device == \"line\" then \"denominator\" else \"numerator\" }))\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_ratio\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ _time: r._time, \"Unmetered\":\n      if not exists r.denominator or r.denominator == 0.0 then 0.0\n      else (r.denominator - r.numerator) / r.denominator * 100.0 } ))\n\n",
              "refId": "Unmetered"
            }
          ],
          "title": "${period}",
          "type": "piechart"
        },
        {
          "datasource": "${datasource}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "red",
                "mode": "fixed"
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "kwatth"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "EVCharging"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "EV Charging"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "HotWater"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Hot Water"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Heatpump"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Heat Pump"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "MainFloor"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Main Floor"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 14,
            "x": 8,
            "y": 5
          },
          "id": 61,
          "options": {
            "displayMode": "basic",
            "orientation": "vertical",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showUnfilled": false,
            "text": {}
          },
          "pluginVersion": "8.2.2",
          "repeatDirection": "h",
          "targets": [
            {
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f and r._location == \"kitchen\" and not exists r._device)\n  |> map(fn: (r) => ({ _value: r._device, Kitchen: r._value * 0.001 } ))\n  |> toString()\n  |> yield(name: \"kitchen\")\n",
              "refId": "Kitchen"
            },
            {
              "hide": false,
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f and r._location == \"basement\" and not exists r._device)\n  |> map(fn: (r) => ({ _value: r._device, Basement: r._value * 0.001 } ))\n  |> toString()\n  |> yield(name: \"basement\")\n",
              "refId": "Basement"
            },
            {
              "hide": false,
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f and r._location == \"vehicles\" and not exists r._device)\n  |> map(fn: (r) => ({ _value: r._device, EVCharging: r._value * 0.001 } ))\n  |> toString()\n  |> yield(name: \"vehicles\")\n",
              "refId": "Vehicles"
            },
            {
              "hide": false,
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f and r._location == \"bedroom\" and not exists r._device)\n  |> map(fn: (r) => ({ _value: r._device, Bedrooms: r._value * 0.001 } ))\n  |> toString()\n  |> yield(name: \"bedroom\")\n",
              "refId": "Bedrooms"
            },
            {
              "hide": false,
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f and r._location == \"main_floor\" and not exists r._device)\n  |> map(fn: (r) => ({ _value: r._device, MainFloor: r._value * 0.001 } ))\n  |> toString()\n  |> yield(name: \"main_floor\")\n",
              "refId": "Main Floor"
            },
            {
              "hide": false,
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f and r._location == \"laundry\" and not exists r._device)\n  |> map(fn: (r) => ({ _value: r._device, Laundry: r._value * 0.001 } ))\n  |> toString()\n  |> yield(name: \"laundry\")\n",
              "refId": "Laundry"
            },
            {
              "hide": false,
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f and r._location == \"garage\" and not exists r._device)\n  |> map(fn: (r) => ({ _value: r._device, Garage: r._value * 0.001 } ))\n  |> toString()\n  |> yield(name: \"garage\")\n",
              "refId": "Garage"
            },
            {
              "hide": false,
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f and r._device == \"hot_water\")\n  |> map(fn: (r) => ({ _value: r._device, HotWater: r._value * 0.001 } ))\n  |> toString()\n  |> yield(name: \"hotwater\")\n",
              "refId": "Hot water"
            },
            {
              "hide": false,
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f and r._device == \"heatpump\")\n  |> map(fn: (r) => ({ _value: r._device, Heatpump: r._value * 0.001 } ))\n  |> toString()\n  |> yield(name: \"heatpump\")\n",
              "refId": "Heat pump"
            },
            {
              "hide": true,
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f and (r._device == \"metered\" or r._device == \"line\"))\n  |> drop(columns: [\"_location\"])\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_device\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ _value: r._device, Unmetered: (r.line - r.metered) * 0.001 } ))\n  |> toString()\n  |> yield(name: \"unmetered\")\n",
              "refId": "Unmetered"
            }
          ],
          "title": "${period} Use (kWh) ",
          "type": "bargauge"
        },
        {
          "datasource": "${datasource}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "red",
                "mode": "fixed"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "hidden",
                "axisSoftMin": 0,
                "fillOpacity": 80,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1
              },
              "mappings": [
                {
                  "options": {
                    "basement": {
                      "color": "text",
                      "index": 2,
                      "text": "Basement"
                    },
                    "bedroom": {
                      "color": "text",
                      "index": 3,
                      "text": "Bedrooms"
                    },
                    "garage": {
                      "color": "text",
                      "index": 8,
                      "text": "Garage"
                    },
                    "heatpump": {
                      "color": "text",
                      "index": 0,
                      "text": "Heat Pump"
                    },
                    "hot_water": {
                      "color": "text",
                      "index": 1,
                      "text": "Hot Water"
                    },
                    "kitchen": {
                      "color": "text",
                      "index": 5,
                      "text": "Kitchen"
                    },
                    "laundry": {
                      "color": "text",
                      "index": 6,
                      "text": "Laundry"
                    },
                    "main_floor": {
                      "color": "text",
                      "index": 7,
                      "text": "Main Floor"
                    },
                    "vehicles": {
                      "color": "text",
                      "index": 4,
                      "text": "EV Charging"
                    }
                  },
                  "type": "value"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "kwatth"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 8,
            "y": 13
          },
          "id": 63,
          "options": {
            "barWidth": 0.5,
            "groupWidth": 0.7,
            "legend": {
              "calcs": [],
              "displayMode": "hidden",
              "placement": "bottom"
            },
            "orientation": "vertical",
            "showValue": "never",
            "stacking": "none",
            "text": {},
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "query": "lookup = {Today: {p: -1d, f: \"today\"}, Month: {p: -1mo, f: \"month\"}, Year: {p: -1y, f: \"year\"}}\nfrom(bucket: \"cs24\")\n  |> range(start: lookup.${period}.p)\n  |> filter(fn: (r) => r._measurement == \"energy\" and r._field == lookup.${period}.f)\n  |> filter(fn: (r) => r._device == \"heatpump\" or\n                       r._device == \"hot_water\" or\n                       (r._location == \"kitchen\" and not exists r._device) or\n                       (r._location == \"laundry\" and not exists r._device) or\n                       (r._location == \"bedroom\" and not exists r._device) or\n                       (r._location == \"basement\" and not exists r._device) or\n                       (r._location == \"main_floor\" and not exists r._device) or\n                       (r._location == \"garage\" and not exists r._device) or\n                       (r._location == \"vehicles\" and not exists r._device)\n                    )\n  |> map(fn: (r) => ({ kWh: r._value * 0.001, _value: if exists r._device then r._device else r._location }))\n  |> toString()\n  |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n",
              "refId": "A"
            }
          ],
          "title": "${period} Use (kWh)",
          "type": "barchart"
        }
      ],
      "title": "Energy",
      "type": "row"
    }
  ],
  "refresh": "10s",
  "schemaVersion": 31,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": true,
          "text": "parkerlane",
          "value": "parkerlane"
        },
        "description": "InfluxDB source of CS24 data",
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "Data Source",
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "influxdb",
        "queryValue": "",
        "refresh": 1,
        "regex": "parkerlane|dundee",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": "Today",
          "value": "Today"
        },
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "Display Period",
        "multi": false,
        "name": "period",
        "options": [
          {
            "selected": true,
            "text": "Today",
            "value": "Today"
          },
          {
            "selected": false,
            "text": "Month",
            "value": "Month"
          },
          {
            "selected": false,
            "text": "Year",
            "value": "Year"
          }
        ],
        "query": "Today, Month, Year",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "CS/ESPHome Sample Panels",
  "uid": "_-Qzs-Dmx",
  "version": 39
}